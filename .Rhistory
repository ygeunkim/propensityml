rbinom(1, 1, .3)
set.seed(1)
ifelse(runif(1) > .7, 1, 0)
set.seed(1)
rbinom(1, 1, .7)
ifelse(runif(2) > .7, 1, 0)
ifelse(.7 > runif(1), 1, 0)
set.seed(1)
ifelse(.7 > runif(1), 1, 0)
set.seed(1)
rbinom(1, 1, .7)
set.seed(1)
ifelse(.3 > runif(1), 1, 0)
set.seed(1)
rbinom(1, 1, .3)
set.seed(1)
ifelse(.3 > runif(100), 1, 0)
ifelse(.3 > runif(100), 1, 0) %>% mean()
rbinom(100, 1, .3) %>% mean()
rbinom(100, 1, .3) %>% var()
ifelse(.3 > runif(100), 1, 0) %>% var()
ifelse(.3 > runif(1000), 1, 0) %>% var()
ifelse(.3 > runif(1000), 1, 0) %>% mean()
rbinom(1000, 1, .3) %>% mean()
rbinom(1000, 1, .3) %>% var()
rbinom(1000, 1, .7) %>% var()
rbinom(1000, 1, .7) %>% mean()
ifelse(.7 > runif(1000), 1, 0) %>% mean()
ifelse(.7 > runif(1000), 1, 0) %>% var()
?rbinom
x
library(propensityml)
x <- sim_outcome(1000)
x
library(propensityml)
x <- sim_outcome(1000)
x
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "outcome")
library(propensityml)
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "outcome", exclude = c("exposure_prob", "outcome_prob"))
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "outcome")
x
library(propensityml)
x
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "outcome")
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "outcome", exclude = c("exposure_prob", "outcome_prob"))
library(propensityml)
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "outcome", exclude = c("exposure_prob", "outcome_prob"))
x
x[,.(var(exposure_prob))]
x[,.(sd(exposure_prob))]
x
x %>% compute_ipw(treatment = "exposure", outcome = "outcome", formula = exposure ~ . - outcome - exposure_prob - outcome_prob)
x %>% compute_ipw(treatment = "exposure", outcome = "outcome", formula = exposure ~ . - exposure_prob - outcome_prob)
x %>% compute_ipw(treatment = "exposure", outcome = "outcome", formula = exposure ~ . - outcome - exposure_prob - outcome_prob)
x %>% tibble::tibble()
library(propensityml)
x <- sim_outcome(1000)
x
x %>% compute_ipw(treatment = "exposure", outcome = "outcome", formula = exposure ~ . - outcome - exposure_prob - outcome_prob)
x %>% compute_ipw(treatment = "exposure", outcome = "outcome", formula = exposure ~ . - outcome - exposure_prob - outcome_prob, method = "logit")
?get
x
x %>% add_propensity(exposure ~ . - outcome - exposure_prob - outcome_prob)
x %>% add_propensity(exposure ~ . - outcome - exposure_prob - outcome_prob, method = "logit")
x
x %>% ps_glm(exposure ~ . - outcome - exposure_prob - outcome_prob, data = .)
x %>% ps_glm(exposure ~ . - outcome - exposure_prob - outcome_prob, data = .) %>% estimate_ps()
x %>% add_propensity(formula = exposure ~ . - outcome - exposure_prob - outcome_prob, method = "logit")
x %>% compute_ipw(treatment = "exposure", outcome = "outcome", formula = exposure ~ . - outcome - exposure_prob - outcome_prob, method = "logit")
library(propensityml)
x <- sim_outcome(1000)
library(propensityml)
x <- sim_outcome(1000)
library(propensityml)
x <- sim_outcome(1000)
x
x %>% compute_ipw(treatment = "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob, method = "logit")
x %>% add_propensity(formula = exposure ~ . - y - exposure_prob, method = "logit")
x %>% add_propensity(formula = exposure ~ . - y - exposure_prob, method = "logit") %>% .[.(mean((propensity - exposure_prob)^2))]
x %>% add_propensity(formula = exposure ~ . - y - exposure_prob, method = "logit") %>% dplyr::summarise(a = mean((propensity - exposure_prob)^2))
library(propensityml)
x
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "y", exclude = "exposure_prob")
library(propensityml)
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "y", exclude = "exposure_prob")
x
chemical
compute_balance(chemical, treatment = "poisox", trt_indicator = 1, outcome = "blood", exclude = "mortal")
library(propensityml)
x
x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit")
x
library(propensityml)
?add_ipw_wt
library(propensityml)
?add_ipw_wt
compute_balance(chemical, treatment = "poisox", trt_indicator = 1, outcome = "blood", exclude = "mortal")
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "y", exclude = "exposure_prob")
x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit")
compute_balance(x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob - propensity - ipw_wt, method = "logit"), treatment = "exposure", trt_indicator = 1, outcome = "ipw_wt", exclude = c("exposure_prob", "propensity")
)
x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit")
compute_balance(x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob - propensity - ipw_wt, method = "logit"), treatment = "exposure", trt_indicator = 1, outcome = "ipw_wt", exclude = c("exposure_prob", "propensity"))
compute_balance(x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob - ipw_wt, method = "logit"), treatment = "exposure", trt_indicator = 1, outcome = "ipw_wt", exclude = c("exposure_prob", "propensity"))
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "y", exclude = "exposure_prob")
compute_balance(x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob - propensity - ipw_wt, method = "logit"), treatment = "exposure", trt_indicator = 1, outcome = "ipw_wt")
x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit")
compute_balance(x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob - ipw_wt, method = "logit"), treatment = "exposure", trt_indicator = 1, outcome = "ipw_wt")
compute_balance(x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob - ipw_wt, method = "logit"), treatment = "exposure", trt_indicator = 1, outcome = "ipw_wt")
x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit")
compute_balance(x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit"), treatment = "exposure", trt_indicator = 1, outcome = "ipw_wt")
compute_balance(x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit"), treatment = "exposure", trt_indicator = 1, outcome = "ipw_wt", exclude = c("exposure_prob", "propensity"))
x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit")
y <- data.table::copy(x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit"))
y
compute_balance(y, treatment = "exposure", trt_indicator = 1, outcome = "ipw_wt", exclude = c("exposure_prob", "propensity"))
y %>% tibble::tibble()
x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit")
compute_balance(x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit"), treatment = "exposure", trt_indicator = 1, outcome = "ipw_wt", exclude = c("exposure_prob", "propensity", "treatment"))
compute_balance(y %>% dplyr::select(-treatment), treatment = "exposure", trt_indicator = 1, outcome = "ipw_wt", exclude = c("exposure_prob", "propensity"))
compute_balance(y %>% dplyr::select(-treatment, -y), treatment = "exposure", trt_indicator = 1, outcome = "ipw_wt", exclude = c("exposure_prob", "propensity"))
x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit")
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "y", exclude = "exposure_prob")
library(propensityml)
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "y", exclude = "exposure_prob")
?data.table::.SD
?get
?compute_asam
x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit")
x
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "y", exclude = "exposure_prob")
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
library(data.table)
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "y", exclude = "exposure_prob")
x %>% tidy_moment("exposure", c("y", "exposure_prob"))
x %>% tidy_moment("exposure", c("y", "exposure_prob")) %>% .[]
x
x %>% tidy_moment("exposure", c("y", "exposure_prob")) %>% .[]
x[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = exposure, .SDcols = c("y", "exposure_prob")]
x
x[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = c("y", "exposure_prob")]
x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit")
y <- copy(x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit"))
y[,`:=`(treatment = NULL, propensity = NULL)]
y
x
x %>% add_ipw_wt(treatment = "exposure", formula = exposure ~ . - y - exposure_prob, method = "logit")
x[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = c("y", "exposure_prob")]
y
x[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")]
x[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = exposure)
x[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure")
y
x[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")]
?setnames
stringr::str_remove(c("w.1", "w.2"), pattern = "\\.")
stringr::str_remove(c("w.1.", "w.2"), pattern = "\\.")
stringr::str_remove_all(c("w.1.", "w.2"), pattern = "\\.")
stringr::str_remove_all(c("w.1.", "w.2"), pattern = ".")
stringr::str_remove_all(c("w.1.", "w.2"), pattern = "\\.")
stringr::str_remove_all(c("w1", "w2"), pattern = "\\.")
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "y", exclude = "exposure_prob")
library(stringr)
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "y", exclude = "exposure_prob")
x[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")]
y
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure")
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% .[]
y
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% .[]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(moment ~ exposure + variable)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(. - value ~ moment)
?dcast
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(. ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + value ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% .[]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")]
y
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% .[]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")]
y[, lapply(.SD, mean), by = exposure, .SDcols = -c("y", "exposure_prob")]
y
y[, lapply(.SD, function(x) {if (is.factor(x)) x <- as.numeric(levels(x))[x]; mean(x)}), by = exposure, .SDcols = -c("y", "exposure_prob")]
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
compute_balance(x, treatment = "exposure", trt_indicator = 1, outcome = "y", exclude = "exposure_prob")
y[, lapply(.SD, function(x) {if (is.factor(x)) x <- as.numeric(levels(x))[x]; mean(x)}), by = exposure, .SDcols = -c("y", "exposure_prob")]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure")
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% .[]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% .[variable != ipw_wt]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% .[variable != "ipw_wt"]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% .[]
y1 <- y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)]
y1
y1[]
y1[variable != "ipw_wt"]
y1[]
y1
y1[,.(balance = value[moment == "mean" & variable != "ipw_wt"] - value[moment == "mean" & variable == "ipw_wt"]), by = variable]
y1[,.(balance = value[moment == "mean"] - value[moment == "mean"]), by = variable]
y1[,.(balance = value[moment == "mean" & variable != "ipw_wt"] - value[moment == "mean"]), by = variable]
y1[,.(balance = value[moment == "mean" & variable != "ipw_wt"] - value[moment == "mean" & variable == "ipw_wt"]), by = variable]
y1
y1[moment == "mean" & variable == "ipw_wt", value]
y1[,.(balance = value[moment == "mean" & variable != "ipw_wt"] - value[moment == "mean" & variable == "ipw_wt"]), by = .(exposure, variable)]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure") %>% .[, c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% .[]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = "exposure")
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var"))
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var"))
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% .[]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.mean.var ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var + value ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment) %>% .[.(balance = (mean - ipw_wt.mean) / (sqrt((var + ipw_wt.var) / 2))), by = .(exposure, variable)]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment) %>% .[,.(balance = (mean - ipw_wt.mean) / (sqrt((var + ipw_wt.var) / 2))), by = .(exposure, variable)]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment) %>% .[,.(balance = (mean - ipw_wt.mean) / (sqrt((var + ipw_wt.var) / 2))), by = .(variable, exposure)]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment) %>% .[,.(balance = (mean - ipw_wt.mean) / (sqrt((var + ipw_wt.var) / 2))), by = exposure]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment) %>% .[,.(balance = (mean - ipw_wt.mean) / (sqrt((var + ipw_wt.var) / 2))), by = variable]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var"))
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% tidyr::spread(exposure, value)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% tidyr::spread(exposure, value) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% .[]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment) %>% .[, .( balance = diff(mean - ipw_wt.mean) ), by = variable]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment) %>% .[, .( balance = diff(mean - ipw_wt.mean) / sqrt(sum(var) / 2) ), by = variable]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment) %>% .[, .( balance = diff(mean - ipw_wt.mean) / sqrt(sum(var) / 2) ), by = exposure]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment) %>% .[, .( balance = diff(mean - ipw_wt.mean) / sqrt(sum(var) / 2) ), by = variable]
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment) %>% .[, .( balance = diff(mean - ipw_wt.mean) / sqrt(sum(var) / 2) ), by = variable]
y
x
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y,)
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y)
y[, unlist(lapply(.SD, compute_moment)) %>% as.list(), by = c("exposure", NULL), .SDcols = -c("y", "exposure_prob")] %>% melt(id.vars = c("exposure", "ipw_wt.mean", "ipw_wt.var")) %>% .[,c("variable", "moment") := tstrsplit(variable, ".", fixed = TRUE)] %>% dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment) %>% .[, .( balance = diff(mean - ipw_wt.mean) / sqrt(sum(var) / 2) ), by = variable]
library(propensityml)
x
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% .[]
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
"exposure"
?stringr::str_c
paste0(c("variable", "ipw_wt.mean", "ipw_wt.var", "moment"), collapse = "~")
paste0(c("variable", "ipw_wt.mean", "ipw_wt.var", "moment"), sep = "~")
paste0("expsure", paste0(c("variable", "ipw_wt.mean", "ipw_wt.var", "moment"), collapse = "+"), collapse = "~")
paste0("expsure", paste0(c("variable", "ipw_wt.mean", "ipw_wt.var", "moment"), collapse = "+"), collapse = "\\~")
paste0("expsure", paste0(c("variable", "ipw_wt.mean", "ipw_wt.var", "moment"), collapse = "+"), sep = "\\~")
paste0("expsure", paste0(c("variable", "ipw_wt.mean", "ipw_wt.var", "moment"), collapse = "+"), sep = "~")
paste0("expsure", paste0(c("variable", "ipw_wt.mean", "ipw_wt.var", "moment"), collapse = "+"), collpase = "~")
paste0(c("expsure", paste0(c("variable", "ipw_wt.mean", "ipw_wt.var", "moment"), collapse = "+")), collpase = "~")
paste0(c("expsure", paste0(c("variable", "ipw_wt.mean", "ipw_wt.var", "moment"), collapse = "+")), sep = "~")
paste0(c("expsure", paste0(c("variable", "ipw_wt.mean", "ipw_wt.var", "moment"), collapse = "+")), collapse = "~")
paste(c("expsure", paste(c("variable", "ipw_wt.mean", "ipw_wt.var", "moment"), collapse = "+")), collapse = "~")
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
paste(c("expsure", paste(c("variable", "ipw_wt.mean", "ipw_wt.var", "moment"), collapse = "+")), collapse = "~")
?dcast
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
library(propensityml)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
source('~/Documents/GitHub/propensityml/R/evaluate.R', echo=TRUE)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
library(propensityml)
knitr::opts_chunk$set(
comment = "#>",
collapse = TRUE,
out.width = "70%",
fig.align = "center",
fig.width = 6,
fig.asp = .618,
fig.pos = "H"
)
options(digits = 3)
library(propensityml)
(x <- sim_outcome(1000, covmat = build_covariate()))
(fit_rf <-
x %>%
ps_rf(exposure ~ . - y - exposure_prob, data = .))
class(fit_rf)
estimate_ps(fit_rf) %>% head()
x$exposure_prob %>% head()
x$exposure_prob %>% tail()
estimate_ps(fit_rf) %>% tail()
(fit_rf <-
x %>%
ps_glm(exposure ~ . - y - exposure_prob, data = .))
class(fit_rf)
estimate_ps(fit_rf) %>% head()
estimate_ps(fit_rf) %>% head()
x$exposure_prob %>% head()
(fit_rf <-
x %>%
ps_rf(exposure ~ . - y - exposure_prob, data = .))
class(fit_rf)
estimate_ps(fit_rf) %>% head()
?forecast::Arima
?arima
LakeHuron %>% length()
LakeHuron
itsmr::lake
?forecast::forecast
?logLik.arima
?arima
x
?compute_asam
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
x
add_ipw_wt(x, treatment = "exposure", ormula = exposure ~ . - exposure_prob - y)
add_ipw_wt(x, treatment = "exposure", ormula = exposure ~ . - exposure_prob - y, method = "logit")
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit")
x
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit")
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit")[,-c("treatment", "propensity")]
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit")[,-c("treatment", "propensity")]
library(propensityml)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% .[]
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(exposure ~ variable + moment)
library(propensityml)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
library(propensityml)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% .[]
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(expousre ~ variable ~ ipw_wt.mean + ipw_wt.var + moment)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(exposure ~ variable ~ ipw_wt.mean + ipw_wt.var + moment)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(exposure ~ variable + ipw_wt.mean + ipw_wt.var + moment)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(variable + ipw_wt.mean + ipw_wt.var + moment ~ exposure)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% .[]
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment)
paste0(c("variable", "ipw_wt.mean", "ipw_wt.var", "moment"), collapse = "+")
paste0(c("exposure", paste0(c("variable", "ipw_wt.mean", "ipw_wt.var", "moment"), collapse = "+")), collapse = "~")
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment)
library(propensityml)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
library(propensityml)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% .[]
library(propensityml)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
library(propensityml)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
library(propensityml)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% .[]
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(exposure + variable + ipw_wt.mean + ipw_wt.var ~ moment)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(moment + variable + ipw_wt.mean + ipw_wt.var ~ exposure)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(variable + ipw_wt.mean + ipw_wt.var ~ exposure)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% .[]
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(variable + ipw_wt.mean + ipw_wt.var + value ~ exposure)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% .[]
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(variable + ipw_wt.mean + ipw_wt.var ~ exposure)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(variable + ipw_wt.mean + ipw_wt.var ~ exposure, value.var = "value")
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(variable + ipw_wt.mean + ipw_wt.var ~ exposure + value)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(variable + ipw_wt.mean + ipw_wt.var ~ exposure)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(variable + ipw_wt.mean + ipw_wt.var + value ~ exposure)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% .[]
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(variable + ipw_wt.mean + ipw_wt.var + value ~ exposure + moment)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% data.table::dcast(variable + ipw_wt.mean + ipw_wt.var + moment ~ exposure)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y) %>% .[]
library(propensityml)
x %>% compute_asam(treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - exposure_prob - y)
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit")
?compute_ipw
x
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit")
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit") %>% dplyr
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit") %>% dplyr::mutate(ipw_wt = ipw_wt * y)
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit") %>% dplyr::mutate(ipw_wt = ipw_wt * y)
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit") %>% dplyr::mutate(ipw_wt = ipw_wt * y) %>% dplyr::summarise(mean(ipw_wt * y))
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit") %>% dplyr::mutate(ipw_wt = ipw_wt) %>% dplyr::summarise(mean(ipw_wt * y))
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit") %>% dplyr::mutate(ipw_wt = ipw_wt * y) %>% dplyr::summarise(mean(ipw_wt))
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit") %>% dplyr::mutate(ipw_wt = ipw_wt * y)
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit") %>% dplyr::mutate(ipw_wt = ipw_wt * y) %>% .[,-c("treatment", "propensity")]
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit") %>% dplyr::mutate(ipw_wt = ipw_wt * y) %>% .[,-c("treatment", "propensity")] %>% data.table::melt(id.vars = c("exposure", "ipw_wt"))
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit") %>% dplyr::mutate(ipw_wt = ipw_wt * y) %>% .[,-c("treatment", "propensity", "exposure_prob")] %>% data.table::melt(id.vars = c("exposure", "ipw_wt"))
add_ipw_wt(x, treatment = "exposure", formula = exposure ~ . - exposure_prob - y, method = "logit") %>% dplyr::mutate(ipw_wt = ipw_wt * y) %>% .[,-c("treatment", "propensity", "exposure_prob")] %>% data.table::melt(id.vars = c("exposure", "ipw_wt", "y"))
library(propensityml)
x <- sim_outcome(1000)
x
add_ipw_wt(x, "exposure", formula = exposure ~ . - y - exposure_prob)
x
add_ipw(x, "exposure", formula = exposure ~ . - y - exposure_prob)
compute_ipw(x, "exposure", formula = exposure ~ . - y - exposure_prob)
compute_ipw(x, "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob)
library(propensityml)
?add_ipw_wt
?add_ipw_wt
compute_ipw(x, "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob)
compute_ipw(x, "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob) %>% class()
compute_sipw(x, "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob)
add_ipw_wt(x, "exposure", formula = exposure ~ . - y - exposure_prob)
library(propensityml)
compute_iptw(x, "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob)
compute_iptw(x, "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob) %>% .[]
x
library(propensityml)
compute_iptw(x, "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob) %>% .[]
compute_iptw(x, "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob)
compute_balance(x, treatment = "exposure", outcome = "y")
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob")
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob") %>% dplyr::mutate(a = ifelse(abs(balance) > .1, "*", ""))
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob") %>% dplyr::mutate(`` = ifelse(abs(balance) > .1, "*", ""))
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob") %>% dplyr::mutate("" = ifelse(abs(balance) > .1, "*", ""))
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob") %>% dplyr::mutate("." = ifelse(abs(balance) > .1, "*", ""))
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob") %>% dplyr::mutate(`.` = ifelse(abs(balance) > .1, "*", ""))
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob") %>% dplyr::mutate(`1` = ifelse(abs(balance) > .1, "*", ""))
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob") %>% tibble::tibble() %>% dplyr::mutate(`` = ifelse(abs(balance) > .1, "*", ""))
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob") %>% tibble::tibble() %>% dplyr::mutate(` ` = ifelse(abs(balance) > .1, "*", ""))
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob") %>% tibble::tibble() %>% dplyr::mutate(" " = ifelse(abs(balance) > .1, "*", ""))
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob") %>% dplyr::mutate(` ` = ifelse(abs(balance) > .1, "*", ""))
compute_asam(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob")
compute_asam(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - y - exposure_prob)
library(propensityml)
compute_asam(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - y - exposure_prob)
compute_asam(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - y - exposure_prob) %>% .[]
library(propensityml)
library(propensityml)
library(propensityml)
compute_iptw(x, "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob)
add_iptw(x, "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob)
library(propensityml)
compute_asam(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - y - exposure_prob)
?add_iptw
library(propensityml)
library(propensityml)
compute_asam(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - y - exposure_prob)
library(propensityml)
compute_asam(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - y - exposure_prob)
library(propensityml)
compute_asam(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - y - exposure_prob)
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob")
x
x[,mcname := rep(1:10, each = 100)]
x
library(propensityml)
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob")
?seq_len
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob")
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob") %>% mean()
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob") %>% .[,balance]
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob") %>% .[,balance] %>% mean()
library(propensityml)
library(propensityml)
x
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", mc = "mcname")
add_iptw(x, "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob, mc = "mcname")
compute_ipw(x, treatment = "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob, mc = "mcname")
add_ipw_wt(x, "exposure", formula = exposure ~ . - y - exposure_prob, mc = "mcname")
add_iptw(x, "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob, mc = "mcname")
compute_ipw(x, treatment = "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob, mc = "mcname")
compute_ipw(x, treatment = "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob, mc = "mcname")$IPW
rep(compute_ipw(x, treatment = "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob, mc = "mcname")$IPW, each = 2)
length(NULL)
rep(1:5, each = 0)
rep(1:5, each = 0)
x
x$mcname %>% unique() %>% length()
x[,.N, by = mcname]
library(propensityml)
add_iptw(x, "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob, mc = "mcname")
compute_asam(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - y - exposure_prob, mc = "mcname")
seq_len(x[["mcname"]] %>% unique())
seq_len(x$mcname %>% unique())
x$mcname
x$mcname %>% unique()
seq_along(x$mcname %>% unique())
library(propensityml)
compute_asam(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - y - exposure_prob, mc = "mcname")
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", mc = "mcname")
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob")
compute_balance(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", exclude = "mcname")
library(propensityml)
compute_asam(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - y - exposure_prob, mc = "mcname")
add_iptw(x, "exposure", outcome = "y", formula = exposure ~ . - y - exposure_prob, mc = "mcname")
library(propensityml)
compute_asam(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - y - exposure_prob, mc = "mcname")
library(propensityml)
compute_asam(x, treatment = "exposure", outcome = "y", exclude = "exposure_prob", formula = exposure ~ . - y - exposure_prob, mc = "mcname")
