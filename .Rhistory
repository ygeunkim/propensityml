(chemical %>% ps_glm(poisox ~ age + sex, data = .)) %>% names
source('~/Documents/GitHub/propensityml/R/propensity.R', echo=TRUE)
(chemical %>% ps_glm(poisox ~ age + sex, data = .)) %>% names
(chemical %>% ps_glm(poisox ~ age + sex, data = .))
chemical %>% ps_glm(poisox ~ age + sex, data = .)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
chemical %>% ps_glm(poisox ~ age + sex, data = .) %>% names
(chemical %>% ps_glm(poisox ~ age + sex, data = .))
(chemical %>% ps_glm(poisox ~ age + sex, data = .))$model
ps_glm(poisox ~ age + sex, data = chemical)
source('~/Documents/GitHub/propensityml/R/propensity.R', echo=TRUE)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
source('~/Documents/GitHub/propensityml/R/propensity.R', echo=TRUE)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
(chemical %>% ps_glm(poisox ~ age + sex, data = .))$model
(chemical %>% ps_glm(poisox ~ age + sex, data = .))$name
source('~/Documents/GitHub/propensityml/R/propensity.R', echo=TRUE)
a <- chemical %>% ps_glm(poisox ~ age + sex, data = .)
a
a
a$model
a %>% names
a
a$model
a$name
source('~/Documents/GitHub/propensityml/R/propensity.R', echo=TRUE)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
(chemical %>% ps_glm(poisox ~ age + sex, data = .))
(chemical %>% ps_glm(poisox ~ age + sex, data = .))$model
source('~/Documents/GitHub/propensityml/R/propensity.R', echo=TRUE)
?predict
?predict.randomForest
library(propensityml)
a <- chemical %>% ps_rf(poisox ~ age + sex, data = .)
estimate_ps(a)
library(propensityml)
a <- chemical %>% ps_rf(poisox ~ age + sex, data = .)
estimate_ps(a)
chemical$poisox %>% levels()
a <- chemical %>% dplyr::mutate(poisox = factor(poisox, levels = c(FALSE, TRUE))) %>% ps_rf(poisox ~ age + sex, data = .)
chemical %>% dplyr::mutate(poisox = factor(poisox, levels = c(FALSE, TRUE)))
chemical %>% dplyr::mutate(poisox = ifelse(poisox == 1, TRUE, FALSE) ,poisox = factor(poisox, levels = c(FALSE, TRUE)))
chemical %>% dplyr::mutate(poisox = ifelse(poisox == 1, TRUE, FALSE) ,poisox = factor(poisox, levels = c(FALSE, TRUE))) %>% ps_rf(poisox ~ age + sex, data = .)
a <- chemical %>% dplyr::mutate(poisox = ifelse(poisox == 1, TRUE, FALSE) ,poisox = factor(poisox, levels = c(FALSE, TRUE))) %>% ps_rf(poisox ~ age + sex, data = .)
a
estimate_ps(a)
chemical
chemical$poisox %>% levels()
a <- chemical %>% dplyr::mutate(poisox = factor(poisox, levels = c(1, 0))) %>% ps_rf(poisox ~ age + sex, data = .)
chemical %>% dplyr::mutate(poisox = factor(poisox, levels = c(1, 0)))
(chemical %>% dplyr::mutate(poisox = factor(poisox, levels = c(1, 0))))$poisox %>% levels
a <- chemical %>% dplyr::mutate(poisox = factor(poisox, levels = c(1, 0))) %>% ps_rf(poisox ~ age + sex, data = .)
estimate_ps(a)
?randomForest
chemical %>% ps_glm(poisox ~ age + sex, data = .)
(chemical %>% ps_glm(poisox ~ age + sex, data = .))
?glm
?predict.glm
chemical
chemical$poisox %>% levels()
estimate_ps(a)
estimate_ps(a) %>% head()
a <- chemical %>% ps_rf(poisox ~ age + sex, data = .)
estimate_ps(a) %>% head()
estimate_ps(a)[,colnames(estimate_ps(a)) == 1]
estimate_ps(a)[,colnames(estimate_ps(a)) == TRUE]
estimate_ps(a)[,colnames(estimate_ps(a)) == 1]
chemical %>% dplyr::mutate(poisox = ifelse(poisox == 1, TRUE, FALSE) ,poisox = factor(poisox, levels = c(FALSE, TRUE))) %>% ps_rf(poisox ~ age + sex, data = .)
a <- chemical %>% dplyr::mutate(poisox = ifelse(poisox == 1, TRUE, FALSE) ,poisox = factor(poisox, levels = c(FALSE, TRUE))) %>% ps_rf(poisox ~ age + sex, data = .)
a
estimate_ps()
estimate_ps(a)
estimate_ps(a)[,colnames(estimate_ps(a)) == 1]
estimate_ps(a)[,colnames(estimate_ps(a)) == TRUE]
colnames(estimate_ps(a))
TRUE == 1
1 == TRUE
a <- chemical %>% ps_rf(poisox ~ age + sex, data = .)
estimate_ps(a)[,colnames(estimate_ps(a)) == 1]
estimate_ps(a)[,colnames(estimate_ps(a)) == TRUE]
predict.glm
glm
a <- chemical %>% ps_rf(poisox ~ age + sex, data = .)
names(a)
a$model %>% names
a$model$y
a$model$classes
(chemical %>% dplyr::mutate(poisox = ifelse(poisox == 1, TRUE, FALSE) ,poisox = factor(poisox, levels = c(FALSE, TRUE))) %>% ps_rf(poisox ~ age + sex, data = .))$model$classes
a <- chemical %>% ps_rf(poisox ~ age + sex, data = .)
a$model$classes
c("1", "TRUE")
c("1", "TRUE") %in% a$model$classes
c("1", "TRUE") == a$model$classes
ifelse(c("1", "TRUE") %in% a$model$classes, 1, TRUE)
ifelse(c("1", "TRUE") == a$model$classes, 1, TRUE)
ifelse(a$model$classes == c("1", "TRUE"), 1, TRUE)
ifelse(a$model$classes %in% c("1", "TRUE"), 1, TRUE)
ifelse(c("1", "TRUE") == a$model$classes, 1, 0)
ifelse(c("1", "TRUE") %in% a$model$classes, 1, 0)
ifelse(c("1", "TRUE") == a$model$classes, 1, 0)
ifelse(a$model$classes == c("1", "TRUE"), 1, 0)
ifelse(a$model$classes %in% c("1", "TRUE"), 1, 0)
ifelse(a$model$classes == c("1", "TRUE"), 1, 0)
a$model$classes == c("1", "TRUE")
a$model$classes %in% c("1", "TRUE")
c("1", "TRUE") == a$model$classes
c("1", "TRUE") %in% a$model$classes
a$model$classes
c("1", "TRUE") %in% c("TRUE", "FALSE")
c(0, TRUE)
which(c("1", "TRUE") %in% c("TRUE", "FALSE"))
which(c("1", "TRUE") %in% c("TRUE", "FALSE")) == 2
ifelse(
which(c("1", "TRUE") %in% object$model$classes) == 1,
1,
TRUE
)
ifelse(
which(c("1", "TRUE") %in% a$model$classes) == 1,
1,
TRUE
)
ifelse(
which(c("1", "TRUE") %in% c("TRUE", "FALSE")) == 1,
1,
TRUE
)
estimate_ps(a)
estimate_ps(a)[,colnames(estimate_ps(a)) == 1]
estimate_ps(a)[,colnames(estimate_ps(a)) == 1] %>% class()
source('~/Documents/GitHub/propensityml/R/propensity.R', echo=TRUE)
a
estimate_ps(a)
a
a$name
source('~/Documents/GitHub/propensityml/R/propensity.R', echo=TRUE)
estimate_ps(a)
library(propensityml)
?rpart
source('~/Documents/GitHub/propensityml/R/propensity.R', echo=TRUE)
chemical %>% ps_cart(poisox ~ age + sex, data = .)
(chemical %>% ps_cart(poisox ~ age + sex, data = .))
(chemical %>% ps_cart(poisox ~ age + sex, data = .))$splits
(chemical %>% ps_cart(poisox ~ age + sex, data = .))$model$splits
(chemical %>% ps_cart(poisox ~ age + sex, data = .))$model$frame
predict((chemical %>% ps_cart(poisox ~ age + sex, data = .))$model, type = "class")
predict((chemical %>% ps_cart(poisox ~ age + sex, data = .))$model, type = "prob")
(chemical %>% ps_cart(poisox ~ age + sex, data = .))$model %>% plot()
library(propensityml)
modelr::add_predictions
?modelr::add_predictions
?is.null
source('~/Documents/GitHub/propensityml/R/weighting.R', echo=TRUE)
library(propensityml)
a <- chemical %>% ps_glm(poisox ~ age + sex, data = .)
a
chemical %>% add_propensity(object = a)
chemical %>% add_propensity(formula = poisox ~ age + sex)
chemical %>% add_propensity(formula = poisox ~ age + sex, method = "rf")
b <- chemical %>% ps_rf(poisox ~ age + sex, data = .)
chemical %>% add_propensity(object = b)
chemical %>% add_propensity(formula = poisox ~ age + sex, method = "rf")
chemical %>% add_propensity(formula = poisox ~ age + sex, method = "rf")
set.seed(1)
chemical %>% add_propensity(formula = poisox ~ age + sex, method = "rf")
chemical %>% add_propensity(formula = poisox ~ age + sex, method = "rf")
set.seed(1)
b <- chemical %>% ps_rf(poisox ~ age + sex, data = .)
chemical %>% add_propensity(object = b)
set.seed(1)
chemical %>% add_propensity(formula = poisox ~ age + sex, method = "rf")
library(propensityml)
library(propensityml)
chemical
a <- chemical %>% ps_glm(poisox ~ age + sex, data = .)
a
?lm
library(propensityml)
?ps_glm
?sim_outcome
?lm
library(propensityml)
?estimate_ps
?lm
library(propensityml)
ps_glm
?ps_glm
a
a %>% class()
a <- chemical %>% ps_glm(poisox ~ age + sex, data = .)
a
library(propensityml)
a <- chemical %>% ps_glm(poisox ~ age + sex, data = .)
a
library(propensityml)
glm
chemical %>% ps_glm(poisox ~ age + sex, data = .)
(chemical %>% ps_glm(poisox ~ age + sex, data = .))
(chemical %>% ps_glm(poisox ~ age + sex, data = .))$model
library(propensityml)
?structure
library(propensityml)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
a <- chemical %>% ps_glm(poisox ~ age + sex, data = .)
a
library(propensityml)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
lm
lm.fit
lm.class
`lm-class`
?lm
glm
library(propensityml)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
glm
library(propensityml)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
(chemical %>% ps_glm(poisox ~ age + sex, data = .)) %>% names
(chemical %>% ps_glm(poisox ~ age + sex, data = .)) %>% class
glm
library(propensityml)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
chemical %>% glm(poisox ~ age + sex, data = .)
chemical %>% glm(poisox ~ age + sex, data = ., family = binomail)
chemical %>% glm(poisox ~ age + sex, data = ., family = binomial)
chemical %>% glm(poisox ~ age + sex, data = ., family = binomial) %>% names
chemical %>% glm(poisox ~ age + sex, data = ., family = binomial) %>% class
glm
chemical %>% glm(poisox ~ age + sex, data = ., family = binomial)
library(propensityml)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
(chemical %>% ps_glm(poisox ~ age + sex, data = .))
glm
chemical %>% glm(poisox ~ age + sex, data = ., family = binomial) %>% print
library(propensityml)
(chemical %>% ps_glm(poisox ~ age + sex, data = .))
glm
print.glm
?print.summary.glm
library(propensityml)
(chemical %>% ps_glm(poisox ~ age + sex, data = .))
chemical %>% ps_glm(poisox ~ age + sex, data = .)
library(propensityml)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
chemical %>% ps_rf(poisox ~ age + sex, data = .)
chemical %>% ps_glm(poisox ~ age + sex, data = .) %>% class()
chemical %>% ps_glm(poisox ~ age + sex, data = .) %>% print()
glm
library(propensityml)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
chemical %>% ps_glm(poisox ~ age + sex, data = .) %>% print()
(chemical %>% ps_glm(poisox ~ age + sex, data = .))
(chemical %>% ps_glm(poisox ~ age + sex, data = .)) %>% print
library(propensityml)
?propmod
?UseMethod
methods(print)
getS3method("print")
getS3method("print", "propmod")
?getS3method
library(propensityml)
methods(print)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
library(propensityml)
a <- chemical %>% ps_glm(poisox ~ age + sex, data = .)
a
a$model
print(a)
class(a)
?print
?print.propmod
?print.anova.glm
?print.default
?tibble::print.tbl
?print.aov
library(propensityml)
?print.propmod
methods(print)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
library(propensityml)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
a <- chemical %>% ps_glm(poisox ~ age + sex, data = .)
a %>% namees
a %>% namees()
a %>% names()
a$model
a$name
estimate_ps(a)
library(propensityml)
chemical %>% ps_glm(poisox ~ age + sex, data = .)
chemical %>% ps_rf(poisox ~ age + sex, data = .)
library(propensityml)
build_covariate()
build_covariate(value_cor = FALSE)
?mvtnorm::rmvnorm
?Matrix::bidag
?Matrix::bdiag
?mvtnorm::rmvnorm
mvtnorm::rmvnorm(5, sigma = build_covariate())
mvtnorm::rmvnorm(5, sigma = build_covariate() %>% as.matrix())
library(propensityml)
build_covariate()
mvtnorm::rmvnorm(5, sigma = build_covariate())
mvtnorm::rmvnorm(5, sigma = build_covariate()) %>% data.table::data.table()
paste0("w", c(1, 3, 5, 6, 8, 9))
library(propensityml)
sim_outcome(50)
sim_outcome(50)[]
library(propensityml)
library(propensityml)
sim_covariate(50)
c(0, .8, -.25, .6, -.4, -.8, -.5, 7, -3.85)
c(0, .8, -.25, .6, -.4, -.8, -.5, 7, -3.85) %>% length()
g
gam
c(-3.85, .3, -.36, -73, -.2, .71, -.19, .26) %>% length()
c(0, .8, -.25, .6, -.4, -.8, -.5, 7) %>% length()
sim_covariate(50)
sim_covariate(50)[,exposure_prob := c(0, .8, -.25, .6, -.4, -.8, -.5, .7) * .SD]
sim_covariate(50)[,.(exposure = c(0, .8, -.25, .6, -.4, -.8, -.5, .7) * .SD)]
sim_covariate(50)[,exposure_prob := sum(c(0, .8, -.25, .6, -.4, -.8, -.5, .7) * .SD)]
sim_covariate(50)[,exposure_prob := sum(c(0, .8, -.25, .6, -.4, -.8, -.5, .7) * .SD)][]
sim_covariate(50)[,exposure_prob := (1 + exp(sum(c(0, .8, -.25, .6, -.4, -.8, -.5, .7) * .SD)))^(-1)][]
sim_covariate(50)[,.(exposure = sum(c(0, .8, -.25, .6, -.4, -.8, -.5, .7) * .SD))]
sim_covariate(50)[,exposure_prob := list(1 + exp(sum(c(0, .8, -.25, .6, -.4, -.8, -.5, .7) * .SD)))^(-1)][]
sim_covariate(50)[,exposure_prob := list((1 + exp(sum(c(0, .8, -.25, .6, -.4, -.8, -.5, .7) * .SD)))^(-1))][]
sim_covariate(50)
sim_covariate(50)[, exposure := lapply(.SD, function(x) {(1 + exp(sum(c(0, .8, -.25, .6, -.4, -.8, -.5, .7) * x)))^(-1)})]
dim(sim_covariate(50))
sim_covariate(50)[, exposure := lapply(.SD, function(x) {(1 + exp(sum(c(0, .8, -.25, .6, -.4, -.8, -.5, .7) * x)))^(-1)}), .SDcols = paste0("w", 1:7)]
sim_covariate(50)[, exposure := lapply(.SD, function(x) {(1 + exp(sum(c(.8, -.25, .6, -.4, -.8, -.5, .7) * x)))^(-1)}), .SDcols = paste0("w", 1:7)]
c(0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7) %>% length()
sim_covariate(50)[, exposure := lapply(.SD, function(x) {(1 + exp(sum(c(.8, -.25, .6, -.4, -.8, -.5, .7) * x)))}), .SDcols = paste0("w", 1:7)]
sim_covariate(10)
library(tidyverse)
sim_covariate(10) %>% mutate_at(vars(paste0("w", 1:7)), ~function(x) {sum(c(0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7) * x)})
?mutate_at
sim_covariate(10) %>% mutate_at(vars(contains(1:7)), ~function(x) {sum(c(0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7) * x)})
?contains
sim_covariate(10) %>% select(contains(1:7))
sim_covariate(10) %>% select(contains(1))
sim_covariate(10) %>% select(contains("1"))
sim_covariate(10) %>% mutate_at(vars(contains(paste0("w", 1:7))), ~function(x) {sum(c(0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7) * x)})
sim_covariate(10) %>% mutate_at(vars(w1, w2), ~function(x) {sum(c(0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7) * x)})
?Reduce
sim_covariate(10)[,exposure := Reduce("+", c(0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7), .SD[,1:7])]
sim_covariate(10)[,exposure := Reduce("+", c(0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7) * .SD[,1:7])]
sim_covariate(10)[,exposure := Reduce("+", c(0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7) * .SD[,1:7])][]
sim_covariate(10)[,exposure := Reduce("+", c(0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7) * .SD[,1:7])] %>% dim
sim_covariate(10)[,exposure := Reduce("+", c(0, 0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7) * c(1, .SD[,1:7]))] %>% dim
sim_covariate(10)[,exposure := Reduce("+", c(0, 0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7) * cbind(1, .SD[,1:7]))] %>% dim
sim_covariate(10)[,exposure := Reduce("+", c(0, 0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7) * cbind(1, .SD[,1:7]))][]
Reduce("+", lapply(names(sim_covariate(10)), function(x) {sim_covariate(10)[[x]] * c(0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7)}))
Reduce("+", lapply(names(sim_covariate(10))[1:7], function(x) {sim_covariate(10)[[x]] * c(0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7)}))
sim_covariate(10))[1:7]
sim_covariate(10)[1:7]
Reduce("+", lapply(names(sim_covariate(10))[1:7], function(x) {sim_covariate(10)[,1:7][[x]] * c(0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7)}))
Reduce("+", lapply(names(sim_covariate(10))[1:7], function(x) {sim_covariate(10)[[x]] * c(0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7)[x]}))
sim_covariate(10)[,exposure := Reduce("+", c(0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7) * .SD[,1:7])][]
?data.table::setcolorder
library(propensityml)
sim_covariate(10)
library(propensityml)
sim_covariate(10)
sim_covariate(10)[]
library(propensityml)
sim_covariate(10)
sim_covariate(10)[,exposure := Reduce("+", c(0, 0.8, -0.25, 0.6, -0.4, -0.8, -0.5, 0.7) * .SD[,1:8])][]
sim_covariate(10)
sim_covariate(10)[, w2w2 := w2 * w2]
sim_covariate(10)[, w2w2 := w2 * w2][]
library(propensityml)
sim_outcome(10)
sim_outcome(10)[]
sim_covariate(10)[, paste0("w", 0:7)]
library(propensityml)
sim_outcome(10)[]
library(propensityml)
sim_outcome(10)[]
library(propensityml)
sim_outcome(10)[]
source('~/Documents/GitHub/propensityml/R/simdata.R', echo=TRUE)
sim_outcome(10)[]
library(propensityml)
sim_outcome(10)[]
sim_outcome(10)[]
library(mvtnorm)
sim_outcome(10)[]
library(propensityml)
sim_outcome(10)
sim_outcome(10)[]
sim_covariate(5)
set.seed(1)
sim_covariate(5)
set.seed(1)
sim_outcome(5)[]
sim_outcome(5)[]
sim_covariate(5)
?modelr::model_matrix
paste0("w", 1:7)
?combn
combn(7, 2)
combn(7, 2, simplify = TRUE)
paste0("w", 1:7)[combn(7, 2)]
combn(1:5, 2, simplify = TRUE)
combn(paste0("w", 1:7), 2, simplify = TRUE)
combn(paste0("w", 1:7), 2, simplify = TRUE) %>% array(2, paste0)
combn(c(1, 3, 5, 6), 2)
library(propensityml)
sim_outcome(5)[]
sim_outcome(5, scenario = "G")[]
sim_outcome(5, scenario = "G") %>% dim
c(-3.85, .3, -.36, -73, -.2, .71, -.19, .26)
c(-3.85, .3, -.36, -73, -.2, .71, -.19, .26) %>% length()
library(propensityml)
sim_outcome(5)[]
library(propensityml)
sim_outcome(5)[]
1:4
8:10
library(propensityml)
sim_outcome(5)
library(propensityml)
sim_outcome(5)
sim_outcome(50)
sim_outcome(50)[outcome_prob > .5]
?sim_outcome
LETTERS
LETTERS[1:7]
?match.arg
library(propensityml)
sim_outcome(50)
sim_outcome(50) %>% ps_cart(exposure ~ w3 + w10, data = .)
sim_outcome(50) %>% ps_glm(exposure ~ w3 + w10, data = .)
sim_outcome(50) %>% estimate_ps(exposure ~ w3 + w10, data = .)
sim_outcome(50) %>% ps_glm(exposure ~ w3 + w10, data = .) %>% estimate_ps()
sim_outcome(50) %>% ps_rf(exposure ~ w3 + w10, data = .) %>% estimate_ps()
sim_outcome(50) %>% ps_rf(exposure ~ w3 + w10, data = .)
sim_outcome(50) %>% dplyr::mutate(exposure = factor(exposure)) %>% ps_rf(exposure ~ w3 + w10, data = .)
sim_outcome(50) %>% dplyr::mutate(exposure = factor(exposure)) %>% ps_rf(exposure ~ w3 + w10, data = .) %>% estimate_ps()
sim_outcome(50) %>% dplyr::mutate(exposure = factor(exposure)) %>% ps_rf(exposure ~ w3 + w10, data = .) %>% predict(type = "prob")
(sim_outcome(50) %>% dplyr::mutate(exposure = factor(exposure)) %>% ps_rf(exposure ~ w3 + w10, data = .))$model %>% predict(type = "prob")
set.seed(1)
(sim_outcome(50) %>% dplyr::mutate(exposure = factor(exposure)) %>% ps_rf(exposure ~ w3 + w10, data = .))$model %>% predict(type = "prob")
set.seed(1)
sim_outcome(50) %>% dplyr::mutate(exposure = factor(exposure)) %>% ps_rf(exposure ~ w3 + w10, data = .) %>% estimate_ps()
sim_outcome(10)
sim_outcome(10) %>% tibble::tibble()
library(propensityml)
sim_outcome(10) %>% tibble::tibble()
library(propensityml)
sim_outcome(10) %>% tibble::tibble()
library(propensityml)
sim_outcome(10) %>% tibble::tibble()
library(propensityml)
sim_outcome(10) %>% tibble::tibble()
library(propensityml)
sim_outcome(10) %>% tibble::tibble()
sim_outcome(50) %>% dplyr::select(-w8, -w9, -w10) %>% ps_glm(exposure ~ ., data = .)
sim_outcome(50) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_glm(exposure ~ ., data = .)
sim_outcome(50) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .)
sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .)
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% plot()
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict()
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$classes
?rpart::rpart
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% names()
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$y
sim_outcome(10) %>% tibble::tibble()
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$y
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$control
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% names()
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$terms
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% dplyr::mutate(exposure = factor(exposure, levels = c(TRUE, FALSE))) %>% ps_cart(exposure ~ ., data = .))$model$terms
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% dplyr::mutate(exposure = if(exposure == 1, TRUE, FALSE)) %>% ps_cart(exposure ~ ., data = .))$model$terms
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% dplyr::mutate(exposure = ifelse(exposure == 1, TRUE, FALSE)) %>% ps_cart(exposure ~ ., data = .))$model$terms
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% dplyr::mutate(exposure = ifelse(exposure == 1, TRUE, FALSE)) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob")
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$model
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$method
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% names
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$y
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$cptable
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$terms
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$frame
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% names
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$params
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$parms
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$ordered
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$where
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model$y
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob")
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob") %>% colnames
library(propensityml)
sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .)
sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .) %>% estimate_ps()
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob")
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob")[, colnames((sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob")) == 1]
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob")[, colnames((sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob")) == "1"]
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob")
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob") %>% colnames()
which(c("1", "TRUE") %in% (sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob") %>% colnames())
which(c("1", "TRUE") %in% (sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob") %>% colnames() == 1)
(sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob") %>% colnames()
c("1", "TRUE") %In% ((sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob") %>% colnames())
c("1", "TRUE") %in% ((sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob") %>% colnames())
which(c("1", "TRUE") %in% ((sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob") %>% colnames()) == 1)
ifelse(which(c("1", "TRUE") %in% ((sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .))$model %>% predict(type = "prob") %>% colnames()) == 1) == 1, 1, TRUE)
library(propensityml)
sim_outcome(100) %>% dplyr::select(-w8, -w9, -w10, -outcome_prob) %>% ps_cart(exposure ~ ., data = .) %>% estimate_ps()
library(propensityml)
